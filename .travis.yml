language: php

dist: xenial

services:
  - docker
  - memcached
  - postgresql
  - redis-server

cache:
  directories:
    - vendor
    - $HOME/.composer/cache

php:
  - 7.3

env:
  global:
    - CODECOVERAGE=1
  matrix:
    - DB=mysql DB_DSN='mysql://root@127.0.0.1/cakephp_test?init[]=SET sql_mode = "STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION"'
    - DB=pgsql DB_DSN='postgres://postgres@127.0.0.1/cakephp_test'
    - DB=sqlite DB_DSN='sqlite:///:memory:'

matrix:
  fast_finish: true

  include:
    - php: 7.2
      env: PREFER_LOWEST=1 CODECOVERAGE=0

before_install:
  - echo cakephp version && tail -1 VERSION.txt

  - |
      if [[ $DB == 'mysql' ]]; then
        sudo service postgresql stop
        docker pull -q mysql:8
        docker run --name=mysqld --rm -e MYSQL_ALLOW_EMPTY_PASSWORD=yes --net=host -p 3306:3306 -d mysql:8 --default-authentication-plugin=mysql_native_password

        count=0
        until [ $count -ge 10 ]
        do
          if mysqladmin --silent -h 127.0.0.1 ping &> /dev/null; then break; fi
          echo "Waiting for mysql to start..."
          sleep 2
        done

        docker logs mysqld

        mysql -h 127.0.0.1 -u root -e 'CREATE DATABASE cakephp_test;'
      fi

  - if [[ $DB == 'pgsql' ]]; then psql -c 'CREATE DATABASE cakephp_test;' -U postgres; fi

  - |
      if [[ $CODECOVERAGE == 1 ]]; then
        pecl channel-update pecl.php.net
        pecl install pcov
      fi

  - phpenv config-rm xdebug.ini

  - echo 'extension = memcached.so' >> ~/.phpenv/versions/$(phpenv version-name)/etc/php.ini;
  - echo 'extension = redis.so' >> ~/.phpenv/versions/$(phpenv version-name)/etc/php.ini
  - echo 'extension = apcu.so' >> ~/.phpenv/versions/$(phpenv version-name)/etc/php.ini
  - echo 'apc.enable_cli = 1' >> ~/.phpenv/versions/$(phpenv version-name)/etc/php.ini

  - sudo locale-gen da_DK.UTF-8

install:
  - |
      if [[ $CODECOVERAGE == 1 ]]; then
        composer install --prefer-dist --no-interaction
      else
        composer update --prefer-lowest --prefer-stable --no-interaction
      fi

script:
  - |
      if [[ $CODECOVERAGE == 1 ]]; then
        vendor/bin/phpunit --verbose --coverage-clover=clover.xml
      else
        vendor/bin/phpunit --verbose
      fi

after_success:
  - |
      if [[ $CODECOVERAGE == 1 ]]; then
        wget https://github.com/php-coveralls/php-coveralls/releases/download/v2.1.0/php-coveralls.phar
        chmod +x php-coveralls.phar
        ./php-coveralls.phar
      fi

notifications:
  email: false
